"""empty message

Revision ID: ffb1d56b6701
Revises: ad911c16afed
Create Date: 2025-03-26 03:45:44.084517

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ffb1d56b6701'
down_revision = 'ad911c16afed'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('music_earnings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('music_id', sa.Integer(), nullable=False),
    sa.Column('earnings', sa.Float(), nullable=True),
    sa.Column('payout_triggered', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['music_id'], ['music.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('music_interaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('music_id', sa.Integer(), nullable=False),
    sa.Column('play_count', sa.Integer(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['music_id'], ['music.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('music_purchase',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('music_id', sa.Integer(), nullable=False),
    sa.Column('amount_paid', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['music_id'], ['music.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('music_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('music_id', sa.Integer(), nullable=False),
    sa.Column('play_count', sa.Integer(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('revenue_generated', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['music_id'], ['music.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('creator_donation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('platform_cut', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('creator_earnings', sa.Float(), nullable=True))

    with op.batch_alter_table('event_ticket', schema=None) as batch_op:
        batch_op.add_column(sa.Column('platform_cut', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('creator_earnings', sa.Float(), nullable=True))

    with op.batch_alter_table('music', schema=None) as batch_op:
        batch_op.add_column(sa.Column('platform_cut', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('creator_earnings', sa.Float(), nullable=True))

    with op.batch_alter_table('podcast_purchase', schema=None) as batch_op:
        batch_op.add_column(sa.Column('platform_cut', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('creator_earnings', sa.Float(), nullable=True))

    with op.batch_alter_table('pricing_plan', schema=None) as batch_op:
        batch_op.add_column(sa.Column('includes_live_events', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('includes_tip_jar', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('includes_ad_revenue', sa.Boolean(), nullable=True))

    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.add_column(sa.Column('platform_cut', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('creator_earnings', sa.Float(), nullable=True))

    with op.batch_alter_table('purchase', schema=None) as batch_op:
        batch_op.add_column(sa.Column('platform_cut', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('creator_earnings', sa.Float(), nullable=True))

    with op.batch_alter_table('revenue', schema=None) as batch_op:
        batch_op.add_column(sa.Column('platform_cut', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('creator_earnings', sa.Float(), nullable=True))

    with op.batch_alter_table('tip', schema=None) as batch_op:
        batch_op.add_column(sa.Column('platform_cut', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('creator_earnings', sa.Float(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tip', schema=None) as batch_op:
        batch_op.drop_column('creator_earnings')
        batch_op.drop_column('platform_cut')

    with op.batch_alter_table('revenue', schema=None) as batch_op:
        batch_op.drop_column('creator_earnings')
        batch_op.drop_column('platform_cut')

    with op.batch_alter_table('purchase', schema=None) as batch_op:
        batch_op.drop_column('creator_earnings')
        batch_op.drop_column('platform_cut')

    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.drop_column('creator_earnings')
        batch_op.drop_column('platform_cut')

    with op.batch_alter_table('pricing_plan', schema=None) as batch_op:
        batch_op.drop_column('includes_ad_revenue')
        batch_op.drop_column('includes_tip_jar')
        batch_op.drop_column('includes_live_events')

    with op.batch_alter_table('podcast_purchase', schema=None) as batch_op:
        batch_op.drop_column('creator_earnings')
        batch_op.drop_column('platform_cut')

    with op.batch_alter_table('music', schema=None) as batch_op:
        batch_op.drop_column('creator_earnings')
        batch_op.drop_column('platform_cut')

    with op.batch_alter_table('event_ticket', schema=None) as batch_op:
        batch_op.drop_column('creator_earnings')
        batch_op.drop_column('platform_cut')

    with op.batch_alter_table('creator_donation', schema=None) as batch_op:
        batch_op.drop_column('creator_earnings')
        batch_op.drop_column('platform_cut')

    op.drop_table('music_usage')
    op.drop_table('music_purchase')
    op.drop_table('music_interaction')
    op.drop_table('music_earnings')
    # ### end Alembic commands ###
