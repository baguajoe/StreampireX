"""Fix Video model relationships and overlaps

Revision ID: 3b85fb87d60d
Revises: 0ebaf6531ecd
Create Date: 2025-06-24 01:50:41.258606

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3b85fb87d60d'
down_revision = '0ebaf6531ecd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('video_likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('video_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['video_id'], ['video.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'video_id', name='unique_user_video_like')
    )
    op.create_table('video_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('video_id', sa.Integer(), nullable=False),
    sa.Column('tag_name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['video_id'], ['video.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('video_views',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('video_id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('watch_time', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('viewed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['video_id'], ['video.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('album_track',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('album_id', sa.Integer(), nullable=False),
    sa.Column('track_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], ),
    sa.ForeignKeyConstraint(['track_id'], ['track.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('album', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('genre', sa.String(length=80), nullable=False))
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=150),
               existing_nullable=False)
        batch_op.alter_column('release_date',
               existing_type=sa.DATE(),
               type_=sa.String(length=20),
               nullable=False)
        batch_op.drop_constraint(batch_op.f('album_artist_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['artist_id'], ['id'])
        batch_op.drop_column('created_at')

    with op.batch_alter_table('artist', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('name', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('bio', sa.Text(), nullable=True))
        batch_op.drop_constraint(batch_op.f('artist_username_key'), type_='unique')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.drop_column('avatar_url')
        batch_op.drop_column('username')

    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.add_column(sa.Column('slug', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('icon', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('color', sa.String(length=7), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('sort_order', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.create_unique_constraint(None, ['slug'])

    with op.batch_alter_table('collaborator', schema=None) as batch_op:
        batch_op.add_column(sa.Column('track_id', sa.Integer(), nullable=False))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=120),
               nullable=False)
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.drop_constraint(batch_op.f('collaborator_release_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'track', ['track_id'], ['id'])
        batch_op.drop_column('release_id')

    with op.batch_alter_table('track', schema=None) as batch_op:
        batch_op.add_column(sa.Column('album_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'album', ['album_id'], ['id'])

    with op.batch_alter_table('video', schema=None) as batch_op:
        batch_op.add_column(sa.Column('views', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('comments_count', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('shares_count', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('tags', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('is_public', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_premium', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('price', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('video_slug', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('keywords', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('resolution', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('file_size', sa.BigInteger(), nullable=True))
        batch_op.add_column(sa.Column('codec', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('average_watch_time', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('completion_rate', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('processing_status', sa.String(length=50), nullable=True))
        batch_op.create_unique_constraint(None, ['video_slug'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('video', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('processing_status')
        batch_op.drop_column('status')
        batch_op.drop_column('completion_rate')
        batch_op.drop_column('average_watch_time')
        batch_op.drop_column('codec')
        batch_op.drop_column('file_size')
        batch_op.drop_column('resolution')
        batch_op.drop_column('keywords')
        batch_op.drop_column('video_slug')
        batch_op.drop_column('price')
        batch_op.drop_column('is_premium')
        batch_op.drop_column('is_public')
        batch_op.drop_column('tags')
        batch_op.drop_column('shares_count')
        batch_op.drop_column('comments_count')
        batch_op.drop_column('views')

    with op.batch_alter_table('track', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('album_id')

    with op.batch_alter_table('collaborator', schema=None) as batch_op:
        batch_op.add_column(sa.Column('release_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('collaborator_release_id_fkey'), 'release', ['release_id'], ['id'])
        batch_op.alter_column('role',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.drop_column('track_id')

    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('created_at')
        batch_op.drop_column('sort_order')
        batch_op.drop_column('is_active')
        batch_op.drop_column('color')
        batch_op.drop_column('icon')
        batch_op.drop_column('description')
        batch_op.drop_column('slug')

    with op.batch_alter_table('artist', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('avatar_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_unique_constraint(batch_op.f('artist_username_key'), ['username'])
        batch_op.drop_column('bio')
        batch_op.drop_column('name')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('album', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('album_artist_id_fkey'), 'artist', ['artist_id'], ['id'])
        batch_op.alter_column('release_date',
               existing_type=sa.String(length=20),
               type_=sa.DATE(),
               nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('genre')
        batch_op.drop_column('user_id')

    op.drop_table('album_track')
    op.drop_table('video_views')
    op.drop_table('video_tags')
    op.drop_table('video_likes')
    # ### end Alembic commands ###
